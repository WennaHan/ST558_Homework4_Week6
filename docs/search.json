[
  {
    "objectID": "ST558_Homework4_Week6.html",
    "href": "ST558_Homework4_Week6.html",
    "title": "ST558_Homework4_Week6 - Wenna Han",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n&gt; lappy() is used to apply function to lists and obtain list objects. purr::map() is equivalent to lapply().\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n&gt;lapply(my_list, function(x) cor(x, method = “kendall”))\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n&gt; Main advantage is more consistency and some helper functions. purr has much greater consistency between the functions. The helpers allow us to write compact code for common special cases. Moreover, purr provides more functions that fills in some handy map variants that are absent from base R.\nWhat is a side-effect function?\n&gt; A side-effect function is a function that performs an action that affects the state of the system or interacts with the outside world in addition to (or instead of) returning a value, such as print(), write_csv(). For example, modifying a global variable, writing to a file, updating a database, printing to a console, or changing the user interface.\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n&gt; When we call a function, it creates temporary function environments, thus it will not overwrite sd function."
  },
  {
    "objectID": "ST558_Homework4_Week6.html#task-1-conceptual-questions",
    "href": "ST558_Homework4_Week6.html#task-1-conceptual-questions",
    "title": "ST558_Homework4_Week6 - Wenna Han",
    "section": "",
    "text": "What is the purpose of the lapply() function? What is the equivalent purrr function?\n&gt; lappy() is used to apply function to lists and obtain list objects. purr::map() is equivalent to lapply().\nSuppose we have a list called my_list. Each element of the list is a numeric data frame (all columns are numeric). We want use lapply() to run the code cor(numeric_matrix, method = “kendall”) on each element of the list. Write code to do this below! (I’m really trying to ask you how you specify method = “kendall” when calling lapply())\n&gt;lapply(my_list, function(x) cor(x, method = “kendall”))\nWhat are two advantages of using purrr functions instead of the BaseR apply family?\n&gt; Main advantage is more consistency and some helper functions. purr has much greater consistency between the functions. The helpers allow us to write compact code for common special cases. Moreover, purr provides more functions that fills in some handy map variants that are absent from base R.\nWhat is a side-effect function?\n&gt; A side-effect function is a function that performs an action that affects the state of the system or interacts with the outside world in addition to (or instead of) returning a value, such as print(), write_csv(). For example, modifying a global variable, writing to a file, updating a database, printing to a console, or changing the user interface.\nWhy can you name a variable sd in a function and not cause any issues with the sd function?\n&gt; When we call a function, it creates temporary function environments, thus it will not overwrite sd function."
  },
  {
    "objectID": "ST558_Homework4_Week6.html#task-2---writing-r-functions",
    "href": "ST558_Homework4_Week6.html#task-2---writing-r-functions",
    "title": "ST558_Homework4_Week6 - Wenna Han",
    "section": "Task 2 - Writing R Functions",
    "text": "Task 2 - Writing R Functions\n1. Write a basic function (call it getRMSE()) that takes in a vector of responses and a vector of predictions and outputs the RMSE.\n- If a value is missing for the vector of responses (i.e. an NA is present), allow for additional arguments to the mean() function (elipses) that removes the NA values in the computation.\n\ngetRMSE &lt;- function(resp, pred, ...) {\n  # calculate the residuals\n  residuals &lt;- resp - pred\n  # Calculate the Mean Squared Error (MSE)\n  mse &lt;- mean(residuals^2, ...)\n  # Calculate the Root Mean Square Error (RMSE)\n  rmse &lt;- sqrt(mse)\n  return(rmse)\n}\n\n2. Run the following code to create some response values and predictions.\n- Test your RMSE function using this data.\n\nset.seed(10)\nn &lt;- 100\nx &lt;- runif(n)\nresp &lt;- 3 + 10*x + rnorm(n)\npred &lt;- predict(lm(resp ~ x), data.frame(x))\n\n# test function\ngetRMSE(resp, pred)\n\n[1] 0.9581677\n\n\n\nRepeat after replacing two of the response values with missing values (NA_real_).\n\nTest your RMSE function with and without specifying the behavior to deal with missing values.\n\n\n# replace two of the response values with missing values (40th & 70th)\nresp_with_na &lt;- resp\nresp_with_na[c(40, 70)] &lt;- NA_real_\n\n# test the function with specifying na.rm = TRUE\ngetRMSE(resp_with_na, pred, na.rm = TRUE)\n\n[1] 0.9624592\n\n# test the function without specifying na.rm = TRUE\ngetRMSE(resp_with_na, pred)\n\n[1] NA\n\n\n3. Write a function called getMAE() that follows the specifications of the getRMSE() function.\n\ngetMAE &lt;- function(resp, pred, ...) {\n  # calculate the residuals\n  residuals &lt;- resp - pred\n  # Calculate the Mean Absolute Error (MAE)\n  mae &lt;- mean(abs(residuals), ...)\n  return(mae)\n}\n\n4. Test the MAE function using the generated data.\n\n# test function\ngetMAE(resp, pred)\n\n[1] 0.8155776\n\n\n\nRepeat after replacing two of the response values with missing values (NA_real_).\n\nTest your MAE function with and without specifying the behavior to deal with missing values.\n\n\n# test the function with specifying na.rm = TRUE\ngetMAE(resp_with_na, pred, na.rm = TRUE)\n\n[1] 0.8205076\n\n# test the function without specifying na.rm = TRUE\ngetMAE(resp_with_na, pred)\n\n[1] NA\n\n\n5. Create a wrapper function that can be used to get either or both metrics returned with a single function call. Do not rewrite your above two functions, call them inside the wrapper function (we would call the getRMSE() and getMAE() functions helper functions). When returning your values, give them appropriate names.\n- The function should check that two numeric (atomic) vectors have been passed (consider is.vector(), is.atomic(), and is.numeric()). If not, a message should print and the function should exit.\n- The function should return both metrics by default and include names. The behavior should be able to be changed using a character string of metrics to find.\n\ngetMetrics &lt;- function(resp, pred, metrics = c(\"RMSE\", \"MAE\"), ...) {\n   # Ensure the inputs are atomic numeric vectors of the same length\n  if (!(is.vector(resp) && is.atomic(resp) && is.numeric(resp) &&\n        is.vector(pred) && is.atomic(pred) && is.numeric(pred))) {\n    stop(\"Both responses and predictions must be atomic numeric vectors.\")\n  }\n  \n  results &lt;- list()\n  \n  if (\"RMSE\" %in% metrics) {\n    results$RMSE &lt;- getRMSE(resp, pred, ...)\n  }\n  \n  if (\"MAE\" %in% metrics) {\n    results$MAE &lt;- getMAE(resp, pred, ...)\n  }\n  \n  return(results)\n}\n\n6. Test the new function using the generated data.\n- Call it once asking for each metric individually and once specifying both metrics.\n\n\n# ask for RMSE only\ngetMetrics(resp, pred, metrics = c(\"RMSE\"))\n\n$RMSE\n[1] 0.9581677\n\n# ask for MAE only\ngetMetrics(resp, pred, metrics = c(\"MAE\"))\n\n$MAE\n[1] 0.8155776\n\n# ask for both RMSE and MAE\ngetMetrics(resp, pred, metrics = c(\"RMSE\", \"MAE\"))\n\n$RMSE\n[1] 0.9581677\n\n$MAE\n[1] 0.8155776\n\n\n\nRepeat with replacing two of the response values with missing values (NA_real_).\n\n\n\n# test the function with specifying na.rm = TRUE\ngetMetrics(resp_with_na, pred, na.rm = TRUE)\n\n$RMSE\n[1] 0.9624592\n\n$MAE\n[1] 0.8205076\n\n# test the function without specifying na.rm = TRUE\ngetMetrics(resp_with_na, pred)\n\n$RMSE\n[1] NA\n\n$MAE\n[1] NA\n\n\n\nFinally, test the function by passing it incorrect data (i.e. a data frame or something else instead of vectors).\n\n\nincorrect_resp &lt;- as.data.frame(resp)\n# test the function with incorrect data\ngetMetrics(incorrect_resp, pred)\n\nError in getMetrics(incorrect_resp, pred): Both responses and predictions must be atomic numeric vectors."
  },
  {
    "objectID": "ST558_Homework4_Week6.html#task-3---querying-an-api-and-a-tidy-style-function",
    "href": "ST558_Homework4_Week6.html#task-3---querying-an-api-and-a-tidy-style-function",
    "title": "ST558_Homework4_Week6 - Wenna Han",
    "section": "Task 3 - Querying an API and a Tidy-Style Function",
    "text": "Task 3 - Querying an API and a Tidy-Style Function\n1. Use GET() from the httr package to return information about a topic that you are interested in that has been in the news lately (store the result as an R object). Note: We can only look 30 days into the past with a free account.\n\nlibrary(httr)\nlibrary(jsonlite)\n\nWarning: package 'jsonlite' was built under R version 4.2.3\n\n# get information about businesses\nbusiness_info &lt;- httr::GET(\"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=d0c08c5bbcd3476aa22de1b997561871\")\nstr(business_info, max.level = 1)\n\nList of 10\n $ url        : chr \"https://newsapi.org/v2/top-headlines?country=us&category=business&apiKey=d0c08c5bbcd3476aa22de1b997561871\"\n $ status_code: int 200\n $ headers    :List of 14\n  ..- attr(*, \"class\")= chr [1:2] \"insensitive\" \"list\"\n $ all_headers:List of 1\n $ cookies    :'data.frame':    0 obs. of  7 variables:\n $ content    : raw [1:13505] 7b 22 73 74 ...\n $ date       : POSIXct[1:1], format: \"2024-06-25 14:38:50\"\n $ times      : Named num [1:6] 0 0.00711 0.02155 0.04242 0.08542 ...\n  ..- attr(*, \"names\")= chr [1:6] \"redirect\" \"namelookup\" \"connect\" \"pretransfer\" ...\n $ request    :List of 7\n  ..- attr(*, \"class\")= chr \"request\"\n $ handle     :Class 'curl_handle' &lt;externalptr&gt; \n - attr(*, \"class\")= chr \"response\"\n\n\n2. Parse what is returned and find your way to the data frame that has the actual article information in it (check content). Note the first column should be a list column!\n\nlibrary(tidyverse)\n\nWarning: package 'ggplot2' was built under R version 4.2.3\n\n\nWarning: package 'tidyr' was built under R version 4.2.3\n\n\nWarning: package 'readr' was built under R version 4.2.3\n\n\nWarning: package 'dplyr' was built under R version 4.2.3\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.1     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter()  masks stats::filter()\n✖ purrr::flatten() masks jsonlite::flatten()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nparsed_data &lt;- fromJSON(rawToChar(business_info$content))\nstr(parsed_data) #check what's in content\n\nList of 3\n $ status      : chr \"ok\"\n $ totalResults: int 68\n $ articles    :'data.frame':   20 obs. of  8 variables:\n  ..$ source     :'data.frame': 20 obs. of  2 variables:\n  .. ..$ id  : chr [1:20] \"reuters\" \"reuters\" NA NA ...\n  .. ..$ name: chr [1:20] \"Reuters\" \"Reuters\" \"Yahoo Entertainment\" \"Yahoo Entertainment\" ...\n  ..$ author     : chr [1:20] \"Reuters\" \"Reuters\" NA \"Gerry Smith\" ...\n  ..$ title      : chr [1:20] \"Nvidia, other chips drag Nasdaq; markets eye inflation data - Reuters\" \"Fast fashion retailer Shein filed for London listing in early June - Reuters\" \"Analyst Says NVIDIA Corp (NASDAQ:NVDA) is the “Only Game In Town” for AI GPUs - Yahoo Finance\" \"Alnylam Soars After Drug Meets Goal in Heart Disease Trial - Yahoo Finance\" ...\n  ..$ description: chr [1:20] NA NA NA \"(Bloomberg) -- Alnylam Pharmaceuticals Inc. shares soared after its drug succeeded in treating a progressive an\"| __truncated__ ...\n  ..$ url        : chr [1:20] \"https://www.reuters.com/markets/us/futures-mixed-inflation-data-presidential-debate-focus-2024-06-24/\" \"https://www.reuters.com/business/retail-consumer/fast-fashion-retailer-shein-filed-london-listing-early-june-so\"| __truncated__ \"https://finance.yahoo.com/news/analyst-says-nvidia-corp-nasdaq-135257269.html\" \"https://finance.yahoo.com/news/alnylam-shares-soar-drug-meets-113947027.html\" ...\n  ..$ urlToImage : chr [1:20] NA NA NA \"https://s.yimg.com/ny/api/res/1.2/BA2GgpauAdx.Z5h6GOrnsw--/YXBwaWQ9aGlnaGxhbmRlcjt3PTEyMDA7aD04MDA-/https://med\"| __truncated__ ...\n  ..$ publishedAt: chr [1:20] \"2024-06-24T14:19:00Z\" \"2024-06-24T13:54:00Z\" \"2024-06-24T13:52:57Z\" \"2024-06-24T13:46:08Z\" ...\n  ..$ content    : chr [1:20] NA NA \"If you click 'Accept all', we and our partners, including 237 who are part of the IAB Transparency &amp; Consen\"| __truncated__ \"(Bloomberg) -- Alnylam Pharmaceuticals Inc. shares soared after its drug succeeded in treating a progressive an\"| __truncated__ ...\n\narticle_info &lt;- as_tibble(parsed_data$articles)\n\nstr(article_info$source) #check what's in the first column\n\n'data.frame':   20 obs. of  2 variables:\n $ id  : chr  \"reuters\" \"reuters\" NA NA ...\n $ name: chr  \"Reuters\" \"Reuters\" \"Yahoo Entertainment\" \"Yahoo Entertainment\" ...\n\n# change the first data frame column to two list column\narticle_info &lt;- article_info |&gt;\n  mutate(id=article_info$source$id,\n         name=article_info$source$name) |&gt;\n  select(id, name, everything(), -source)\narticle_info\n\n# A tibble: 20 × 9\n   id        name  author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 reuters   Reut… Reute… Nvid… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n 2 reuters   Reut… Reute… Fast… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n 3 &lt;NA&gt;      Yaho… &lt;NA&gt;   Anal… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24… \"If yo…\n 4 &lt;NA&gt;      Yaho… Gerry… Alny… (Bloomberg… http… https://s… 2024-06-24… \"(Bloo…\n 5 &lt;NA&gt;      Barr… Barro… Nvid… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n 6 &lt;NA&gt;      Ambc… Samue… Bitc… Metaplanet… http… https://a… 2024-06-24… \"&lt;ul&gt;&lt;…\n 7 associat… Asso… FATIM… Yell… The Biden … http… https://d… 2024-06-24… \"WASHI…\n 8 abc-news  ABC … WYATT… Car … Car dealer… http… https://i… 2024-06-24… \"NEW Y…\n 9 &lt;NA&gt;      Decr… Taran… Near… In stark c… http… https://c… 2024-06-24… \"Bears…\n10 &lt;NA&gt;      Yaho… Brett… Stoc… Stocks are… http… https://s… 2024-06-24… \"US st…\n11 google-n… Goog… NBC P… Pass… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n12 google-n… Goog… CNBC   Mond… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n13 google-n… Goog… Inves… 5 Th… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n14 google-n… Goog… Benzi… What… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n15 google-n… Goog… Motor… Duma… &lt;NA&gt;        http… &lt;NA&gt;       2024-06-24…  &lt;NA&gt;  \n16 &lt;NA&gt;      AL.c… Leada… Big … Your next … http… https://w… 2024-06-24… \"Big c…\n17 techradar Tech… Alex … Oops… Can you sp… http… https://c… 2024-06-24… \"Has A…\n18 &lt;NA&gt;      Hind… Ashim… Elon… Elon Musk … http… https://w… 2024-06-24… \"Elon …\n19 bloomberg Bloo… Hema … Jain… Bobby Jain… http… https://a… 2024-06-24… \"Bobby…\n20 &lt;NA&gt;      Glob… ANI P… ANI … Conference… http… https://m… 2024-06-24… \"Confe…\n\n\n3. Now write a quick function that allows the user to easily query this API. The inputs to the function should be the title/subject to search for (string), a time period to search from (string - you’ll search from that time until the present), and an API key. Then, use the function twice.\n\n# Define the function to query the news API\nquery_news_api &lt;- function(query, from_date, api_key) {\n  # Construct the URL for the API request\n  base_url &lt;- \"https://newsapi.org/v2/everything\"\n  params &lt;- list(\n    q = query,\n    from = from_date,\n    apiKey = api_key)\n  \n  # Make the GET request\n  response &lt;- GET(url = base_url, query = params)\n  \n  # Check if the request was successful\n  if (http_status(response)$category != \"Success\") {\n    stop(\"Failed to fetch data from the API.\")\n  }\n  \n  # Parse the JSON content\n  parsed_data &lt;- fromJSON(rawToChar(response$content))\n  article_info &lt;- as_tibble(parsed_data$articles)\n  \n  # change the first data frame column to two list column\n  article_info &lt;- article_info |&gt;\n    mutate(id=article_info$source$id,\n           name=article_info$source$name) |&gt;\n    select(id, name, everything(), -source)\n\n  return(article_info)\n}\n\n# Use the function twice\napi_key &lt;- \"d0c08c5bbcd3476aa22de1b997561871\"\n\n# test 1: Query for the topic \"Business\" from the past 30 days\nresult_business &lt;- query_news_api(query = \"Business\", from_date = Sys.Date() - 30, api_key = api_key)\nprint(result_business)\n\n# A tibble: 100 × 9\n   id        name  author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 wired     Wired Justi… How … \"In this c… http… https://m… 2024-06-16… \"So th…\n 2 &lt;NA&gt;      Yaho… Will … Jabr… \"Jabra is … http… &lt;NA&gt;       2024-06-12… \"If yo…\n 3 wired     Wired Kate … AI I… \"Generativ… http… https://m… 2024-06-04… \"Yet i…\n 4 &lt;NA&gt;      BBC … &lt;NA&gt;   More… \"More than… http… https://i… 2024-05-27… \"Dozen…\n 5 &lt;NA&gt;      BBC … &lt;NA&gt;   Sarw… \"The Scott… http… https://i… 2024-05-26… \"Anas …\n 6 &lt;NA&gt;      Gizm… Maxwe… May … \"McDonald’… http… https://i… 2024-06-17… \"McDon…\n 7 &lt;NA&gt;      Gizm… Gordo… The … \"House of … http… https://i… 2024-06-07… \"House…\n 8 business… Busi… Lara … Busi… \"Business … http… https://i… 2024-06-18… \"From …\n 9 business… Busi… Matth… I to… \"Lauri Uni… http… https://i… 2024-06-12… \"Lauri…\n10 business… Busi… Isabe… I pu… \"Business … http… https://i… 2024-06-13… \"Harri…\n# ℹ 90 more rows\n\n# test 2:Query for the topic \"Tesla\" from 2024-05-30\nresult_tesla &lt;- query_news_api(query = \"Tesla\", from_date = 2024-05-30, api_key = api_key)\nprint(result_tesla)\n\n# A tibble: 100 × 9\n   id        name  author title description url   urlToImage publishedAt content\n   &lt;chr&gt;     &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt; &lt;chr&gt;       &lt;chr&gt; &lt;chr&gt;      &lt;chr&gt;       &lt;chr&gt;  \n 1 wired     Wired Aaria… Tesl… Elon Musk … http… https://m… 2024-06-13… \"Under…\n 2 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… \"[Remo…\n 3 &lt;NA&gt;      Yaho… Sarah… Tesl… Tesla is n… http… &lt;NA&gt;       2024-05-31… \"If yo…\n 4 wired     Wired Boone… Thin… Plus: Wils… http… https://m… 2024-06-08… \"Each …\n 5 &lt;NA&gt;      Gizm… Colli… New … The Tesla … http… https://i… 2024-05-28… \"The T…\n 6 business… Busi… Ana A… Tesl… Tesla is a… http… https://i… 2024-06-06… \"Tesla…\n 7 ars-tech… Ars … Jonat… Nvid… The Tesla … http… https://c… 2024-06-04… \"Enlar…\n 8 the-verge The … Andre… The … The 2024 J… http… https://c… 2024-05-30… \"ByAnd…\n 9 business… Busi… Lloyd… Tesl… Tesla inve… http… https://i… 2024-06-01… \"ALAIN…\n10 &lt;NA&gt;      [Rem… &lt;NA&gt;   [Rem… [Removed]   http… &lt;NA&gt;       1970-01-01… \"[Remo…\n# ℹ 90 more rows"
  }
]